@page "/create-newsletter-email"
@using BlazorCleanArchitecture.UI.ServiceAPI
@using CleanArchitectureBlazor.Application.Dto
@inject NewsLetterEmailServiceAPI NewsLetterEmailService
@inject NavigationManager Navigation

<h3>Create Newsletter Email</h3>

<EditForm method="post" Model="emailDto" OnValidSubmit="HandleValidSubmit" FormName="Test">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>Email: </label>
        <InputText @bind-Value="emailDto.Email" />
        <ValidationMessage For="@(() => emailDto.Email)" />
    </p>
    <p>
        <button type="submit">Save Email</button>
    </p>
</EditForm>

@if (isSuccess)
{
    <div class="alert alert-success">
        Zapisałeś się do newsletter!
    </div>
}
else if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger">
        @message
    </div>
}
<GetAllEmails />
@code {
    [SupplyParameterFromForm]
    public NewsLetterEmailDto emailDto { get; set; } = new ();
    private string? message;
    private bool isSuccess;


    private async Task HandleValidSubmit()
    {
        try
        {
            await NewsLetterEmailService.Create(emailDto);
            isSuccess = true;
        }
        catch (Exception ex)
        {
            message = $"Wystąpił błąd: {ex.Message}";
        }
    }
}